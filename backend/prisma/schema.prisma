// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum ThreadRole {
  AI
  USER
}

enum AiChatRole {
  AI
  USER
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id                     Int                  @id @default(autoincrement())
  name                   String
  email                  String               @unique
  email_verified_at      DateTime?
  username               String               @unique
  password               String
  role                   UserRole             @default(USER)
  ai_conversations       AiConversation[]
  threads                Thread[]
  thread_comments        ThreadComment[]
  thread_comment_replies ThreadCommentReply[]
  verification_tokens    VerificationToken[]
}

model VerificationToken {
  id      Int    @id @default(autoincrement())
  token   String @unique
  user_id Int
  user    User   @relation(fields: [user_id], references: [id])
}

model AiConversation {
  id       Int      @id @default(autoincrement())
  owner    User     @relation(fields: [owner_id], references: [id])
  owner_id Int
  ai_chat  AiChat[]
}

model AiChat {
  id                 Int            @id @default(autoincrement())
  role               AiChatRole     @default(USER)
  ai_conversation    AiConversation @relation(fields: [ai_conversation_id], references: [id])
  ai_conversation_id Int
}

model Thread {
  id              Int             @id @default(autoincrement())
  owner           User            @relation(fields: [owner_id], references: [id])
  owner_id        Int
  title           String
  body            String
  thread_comments ThreadComment[]
}

model ThreadComment {
  id                     Int                  @id @default(autoincrement())
  owner                  User                 @relation(fields: [owner_id], references: [id])
  owner_id               Int
  thread                 Thread               @relation(fields: [thread_id], references: [id])
  thread_id              Int
  body                   String
  role                   ThreadRole           @default(USER)
  thread_comment_replies ThreadCommentReply[]
}

model ThreadCommentReply {
  id         Int           @id @default(autoincrement())
  owner      User          @relation(fields: [owner_id], references: [id])
  owner_id   Int
  comment    ThreadComment @relation(fields: [comment_id], references: [id])
  comment_id Int
  body       String
}
